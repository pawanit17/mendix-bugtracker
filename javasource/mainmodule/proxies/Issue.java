// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mainmodule.proxies;

public class Issue
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject issueMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MainModule.Issue";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IssueType("IssueType"),
		Description("Description"),
		Summary("Summary"),
		IssueID("IssueID"),
		State("State");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Issue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MainModule.Issue"));
	}

	protected Issue(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject issueMendixObject)
	{
		if (issueMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MainModule.Issue", issueMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MainModule.Issue");

		this.issueMendixObject = issueMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Issue.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mainmodule.proxies.Issue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mainmodule.proxies.Issue.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mainmodule.proxies.Issue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mainmodule.proxies.Issue(context, mendixObject);
	}

	public static mainmodule.proxies.Issue load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mainmodule.proxies.Issue.initialize(context, mendixObject);
	}

	public static java.util.List<mainmodule.proxies.Issue> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mainmodule.proxies.Issue> result = new java.util.ArrayList<mainmodule.proxies.Issue>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MainModule.Issue" + xpathConstraint))
			result.add(mainmodule.proxies.Issue.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of IssueType
	 * @param issuetype
	 */
	public final mainmodule.proxies.IssueType_Enumeration getIssueType()
	{
		return getIssueType(getContext());
	}

	/**
	 * @param context
	 * @return value of IssueType
	 */
	public final mainmodule.proxies.IssueType_Enumeration getIssueType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IssueType.toString());
		if (obj == null)
			return null;

		return mainmodule.proxies.IssueType_Enumeration.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IssueType
	 * @param issuetype
	 */
	public final void setIssueType(mainmodule.proxies.IssueType_Enumeration issuetype)
	{
		setIssueType(getContext(), issuetype);
	}

	/**
	 * Set value of IssueType
	 * @param context
	 * @param issuetype
	 */
	public final void setIssueType(com.mendix.systemwideinterfaces.core.IContext context, mainmodule.proxies.IssueType_Enumeration issuetype)
	{
		if (issuetype != null)
			getMendixObject().setValue(context, MemberNames.IssueType.toString(), issuetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.IssueType.toString(), null);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Summary
	 */
	public final java.lang.String getSummary()
	{
		return getSummary(getContext());
	}

	/**
	 * @param context
	 * @return value of Summary
	 */
	public final java.lang.String getSummary(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Summary.toString());
	}

	/**
	 * Set value of Summary
	 * @param summary
	 */
	public final void setSummary(java.lang.String summary)
	{
		setSummary(getContext(), summary);
	}

	/**
	 * Set value of Summary
	 * @param context
	 * @param summary
	 */
	public final void setSummary(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String summary)
	{
		getMendixObject().setValue(context, MemberNames.Summary.toString(), summary);
	}

	/**
	 * @return value of IssueID
	 */
	public final java.lang.String getIssueID()
	{
		return getIssueID(getContext());
	}

	/**
	 * @param context
	 * @return value of IssueID
	 */
	public final java.lang.String getIssueID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.IssueID.toString());
	}

	/**
	 * Set value of IssueID
	 * @param issueid
	 */
	public final void setIssueID(java.lang.String issueid)
	{
		setIssueID(getContext(), issueid);
	}

	/**
	 * Set value of IssueID
	 * @param context
	 * @param issueid
	 */
	public final void setIssueID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String issueid)
	{
		getMendixObject().setValue(context, MemberNames.IssueID.toString(), issueid);
	}

	/**
	 * Set value of State
	 * @param state
	 */
	public final mainmodule.proxies.IssueState_Enumeration getState()
	{
		return getState(getContext());
	}

	/**
	 * @param context
	 * @return value of State
	 */
	public final mainmodule.proxies.IssueState_Enumeration getState(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.State.toString());
		if (obj == null)
			return null;

		return mainmodule.proxies.IssueState_Enumeration.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of State
	 * @param state
	 */
	public final void setState(mainmodule.proxies.IssueState_Enumeration state)
	{
		setState(getContext(), state);
	}

	/**
	 * Set value of State
	 * @param context
	 * @param state
	 */
	public final void setState(com.mendix.systemwideinterfaces.core.IContext context, mainmodule.proxies.IssueState_Enumeration state)
	{
		if (state != null)
			getMendixObject().setValue(context, MemberNames.State.toString(), state.toString());
		else
			getMendixObject().setValue(context, MemberNames.State.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return issueMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mainmodule.proxies.Issue that = (mainmodule.proxies.Issue) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MainModule.Issue";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
