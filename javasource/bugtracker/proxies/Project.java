// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package bugtracker.proxies;

public class Project
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject projectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "BugTracker.Project";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Sponsor("Sponsor"),
		Description("Description"),
		Abbreviation("Abbreviation"),
		Project_User("BugTracker.Project_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Project(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "BugTracker.Project"));
	}

	protected Project(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject projectMendixObject)
	{
		if (projectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("BugTracker.Project", projectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a BugTracker.Project");

		this.projectMendixObject = projectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Project.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static bugtracker.proxies.Project initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return bugtracker.proxies.Project.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static bugtracker.proxies.Project initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new bugtracker.proxies.Project(context, mendixObject);
	}

	public static bugtracker.proxies.Project load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return bugtracker.proxies.Project.initialize(context, mendixObject);
	}

	public static java.util.List<bugtracker.proxies.Project> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<bugtracker.proxies.Project> result = new java.util.ArrayList<bugtracker.proxies.Project>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//BugTracker.Project" + xpathConstraint))
			result.add(bugtracker.proxies.Project.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Sponsor
	 */
	public final java.lang.String getSponsor()
	{
		return getSponsor(getContext());
	}

	/**
	 * @param context
	 * @return value of Sponsor
	 */
	public final java.lang.String getSponsor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Sponsor.toString());
	}

	/**
	 * Set value of Sponsor
	 * @param sponsor
	 */
	public final void setSponsor(java.lang.String sponsor)
	{
		setSponsor(getContext(), sponsor);
	}

	/**
	 * Set value of Sponsor
	 * @param context
	 * @param sponsor
	 */
	public final void setSponsor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sponsor)
	{
		getMendixObject().setValue(context, MemberNames.Sponsor.toString(), sponsor);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Abbreviation
	 */
	public final java.lang.String getAbbreviation()
	{
		return getAbbreviation(getContext());
	}

	/**
	 * @param context
	 * @return value of Abbreviation
	 */
	public final java.lang.String getAbbreviation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Abbreviation.toString());
	}

	/**
	 * Set value of Abbreviation
	 * @param abbreviation
	 */
	public final void setAbbreviation(java.lang.String abbreviation)
	{
		setAbbreviation(getContext(), abbreviation);
	}

	/**
	 * Set value of Abbreviation
	 * @param context
	 * @param abbreviation
	 */
	public final void setAbbreviation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String abbreviation)
	{
		getMendixObject().setValue(context, MemberNames.Abbreviation.toString(), abbreviation);
	}

	/**
	 * @return value of Project_User
	 */
	public final java.util.List<bugtracker.proxies.User> getProject_User() throws com.mendix.core.CoreException
	{
		return getProject_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Project_User
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<bugtracker.proxies.User> getProject_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<bugtracker.proxies.User> result = new java.util.ArrayList<bugtracker.proxies.User>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Project_User.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(bugtracker.proxies.User.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Project_User
	 * @param project_user
	 */
	public final void setProject_User(java.util.List<bugtracker.proxies.User> project_user)
	{
		setProject_User(getContext(), project_user);
	}

	/**
	 * Set value of Project_User
	 * @param context
	 * @param project_user
	 */
	public final void setProject_User(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<bugtracker.proxies.User> project_user)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (bugtracker.proxies.User proxyObject : project_user)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Project_User.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return projectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final bugtracker.proxies.Project that = (bugtracker.proxies.Project) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "BugTracker.Project";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
